#===============================================================================
# Problem 2: Even Fibonacci numbers 
#
# Each new term in the Fibonacci sequence is generated by adding 
# the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values 
# do not exceed four million, find the sum of the even-valued terms.
# 
#===============================================================================

# Author: Minqiang Li (any comments welcome at myfirstname.mylastname@gmail.com!


#===============================================================================
# The code below uses brute-force checking and summation. There are smarter ways.
# For example, one can work out recursive relations for even-valued Fib numbers.
#===============================================================================


given_limit = 4000000 -1
def sum_even_fibonacchi(limit):
    total = 0
    term1, term2 = 1, 2
    while term2 < limit:
        if term2 %2 == 0:
            total += term2
        term1, term2 = term2, term1+term2
    return total
        
print(sum_even_fibonacchi(given_limit))